<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Annatar - Lord of Gifts</title>
	<script type="text/javascript">var __context = {{ ctx|tojson }};</script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.2/js/bootstrap.min.js" integrity="sha512-WW8/jxkELe2CAiE4LvQfwm1rajOS8PHasCCx+knHG0gBHt8EXxS6T6tJRTGuDQVnluuAvMxWF4j8SNFDKceLFg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.2/css/bootstrap.min.css" integrity="sha512-b2QcS5SsA8tZodcDtGRELiGv5SaKSk1vDHDaQRda0htPYWZ6046lr3kJ5bAAQdpV2mmA/4v0wQF9MyU6/pDIAg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
	<script type="text/javascript">
	setTimeout(function (){
		document.getElementById('theform').onsubmit = function(e) {
			e.preventDefault(); // Prevent the default form submission

			// Serialize form fields into an object
			var formData = new FormData(e.target);
			var formObject = {};
			formData.forEach(function(value, key){
				if (key.endsWith('[]')) {
					// Remove '[]' from the key name
					var cleanKey = key.slice(0, -2);
					// Initialize the array if it doesn't exist
					if (!formObject[cleanKey]) {
						formObject[cleanKey] = [];
					}
					// Push the value into the array
					formObject[cleanKey].push(value);
				} else {
					// Handle regular field
					formObject[key] = value;
				}
			});
			console.log(formObject);

			// Convert object to JSON and encode in base64
			var base64EncodedData = btoa(JSON.stringify(formObject));
			var launchUrl = 'stremio://{{ ctx.app_id }}/' + base64EncodedData + '/manifest.json';
			console.log(launchUrl);
			// Redirect to app URL
			window.location.href = launchUrl
		};
	}, 300);
	</script>

</head>
<body>

<div class="container py-5">
	<form id="theform">
		<!-- Floating Form Group for Provider -->
		<div class="form-floating mb-3">
			<select class="form-select" id="debrid_service" name="debrid_service" aria-label="Debrid Provider">
				{% for provider in ctx.available_debrid_providers %}
				<option selected value="{{ provider.id }}">{{ provider.name }}</option>
				{% endfor %}
			</select>
			<label for="provider">Debrid Provider</label>
		</div>

		<div class="form-floating mb-3">
			<input required type="password" class="form-control" id="debrid_api_key" name="debrid_api_key" placeholder="API Key">
			<label for="debrid_api_key">Debrid API Key</label>
		</div>

		<!-- Floating Form Group for Max Results -->
		<div class="form-floating mb-3">
			<select class="form-select" id="max_results" name="max_results" aria-label="Max Results">
				<option value="3">3</option>
				<option selected value="5">5</option>
				<option value="10">10</option>
			</select>
			<label for="max_results">Max Results</label>
		</div>

		<!-- Checkboxes for Multi-Select Example -->
		<fieldset class="mb-3">
			<legend>Indexers</legend>
			{% for indexer in ctx.available_indexers %}
			<div class="form-check">
				<input checked class="form-check-input" type="checkbox" id="{{ indexer.id }}" name="indexers[]" value="{{ indexer.id }}">
				<label class="form-check-label" for="{{ indexer.id }}">{{ indexer.name }}</label>
			</div>
			{% endfor %}
		</fieldset>


		<div class="d-grid gap-2">
		<button type="submit" class="btn btn-primary btn-lg">Install</button>
		</div>
	</form>
</div>

</body>

</html>
